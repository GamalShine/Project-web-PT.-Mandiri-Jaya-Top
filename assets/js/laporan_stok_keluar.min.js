// Inisialisasi DataTable untuk laporan stok keluar
let laporan_stok_keluar = $("#laporan_stok_keluar").DataTable({
    responsive: true,
    scrollX: true,
    ajax: readUrl, // URL untuk membaca data
    columnDefs: [
        {
            searchable: false,
            orderable: false,
            targets: 0 // Kolom pertama tidak dapat diurutkan dan dicari
        }
    ],
    order: [[1, "asc"]], // Mengurutkan berdasarkan kolom kedua (tanggal) secara ascending
    columns: [
        { data: null }, // Kolom untuk nomor urut
        { data: "tanggal" }, // Kolom untuk tanggal
        { data: "barcode" }, // Kolom untuk barcode
        { data: "nama_produk" }, // Kolom untuk nama produk
        { data: "jumlah" }, // Kolom untuk jumlah keluar
        { data: "keterangan" } // Kolom untuk keterangan
    ]
});

// Fungsi untuk me-reload tabel
function reloadTable() {
    laporan_stok_keluar.ajax.reload();
}

// Fungsi untuk menghapus data
function remove(a) {
    Swal.fire({
        title: "Hapus",
        text: "Hapus data ini?",
        type: "warning",
        showCancelButton: true
    }).then(result => {
        if (result.value) {
            $.ajax({
                url: deleteUrl, // URL untuk menghapus data
                type: "post",
                dataType: "json",
                data: { id: a },
                success: () => {
                    Swal.fire("Sukses", "Sukses Menghapus Data", "success");
                    reloadTable();
                },
                error: error => {
                    console.log(error);
                }
            });
        }
    });
}

// Mengatur nomor urut tabel setelah order atau search
laporan_stok_keluar.on("order.dt search.dt", () => {
    laporan_stok_keluar.column(0, { search: "applied", order: "applied" }).nodes().each((cell, i) => {
        cell.innerHTML = i + 1;
    });
});

// Reset form dan validasi saat modal ditutup
$(".modal").on("hidden.bs.modal", () => {
    $("#form")[0].reset();
    $("#form").validate().resetForm();
});
